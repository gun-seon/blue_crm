<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blue.auth.mapper.MyInfoMapper">

    <!-- 내 정보 조회 (Response DTO 매핑, 패스워드 포함) -->
    <select id="findByEmail" resultType="com.blue.auth.dto.MyInfoResponse">
        SELECT
           u.user_id      AS userId,
           u.user_name     AS userName,
           u.user_email    AS userEmail,
           u.user_phone    AS userPhone,
           u.user_role     AS userRole,
           u.user_password AS userPassword,
           c.center_name   AS centerName,
           CASE WHEN u.is_super = 'Y' THEN true ELSE false END AS isSuper
        FROM users u
                 LEFT JOIN centers c ON u.center_id = c.center_id
        WHERE u.user_email = #{userEmail}
    </select>

    <!-- 전화번호 수정 -->
    <update id="updatePhone">
        UPDATE users
        SET user_phone = #{userPhone}
        WHERE user_email = #{userEmail}
    </update>

    <!-- 비밀번호 수정 -->
    <update id="updatePassword">
        UPDATE users
        SET user_password = #{userPassword}
        WHERE user_email = #{userEmail}
    </update>

    <!-- 구글 스프레드 시트 조회 -->
    <select id="findOneBySourceId" resultType="com.blue.auth.dto.SheetSettingsDto">
        SELECT
            spreadsheet_id AS sheetId,
            cursor_row     AS startRow
        FROM gsheet_sources
        WHERE source_id = #{sourceId}
        LIMIT 1
    </select>

    <!-- 구글 스프레드 시트 수정 -->
    <update id="updateOne">
        UPDATE gsheet_sources
        SET spreadsheet_id = #{sheetId},
            cursor_row     = #{startRow},
            updated_at     = NOW()
        WHERE source_id     = #{sourceId}
    </update>

    <!-- 센터 조회: 본사 제외 -->
    <select id="findAll" resultType="com.blue.auth.dto.CenterDto">
        SELECT
        center_id   AS centerId,
        center_name AS centerName
        FROM centers
        WHERE center_id != 1 <!-- 본사 제외 -->
        ORDER BY center_id DESC
    </select>

    <!-- 센터 조회 : 이름 중복 확인 -->
    <select id="existsByName" resultType="boolean">
        SELECT EXISTS(
            SELECT 1 FROM centers WHERE center_name = #{centerName} LIMIT 1
        )
    </select>

    <!-- 센터 추가 -->
    <insert id="insert">
        INSERT INTO centers (center_name) VALUES (#{centerName})
    </insert>

    <!-- 직원(사용자) 존재 여부 -->
    <select id="countUsersInCenter" resultType="int">
        SELECT COUNT(*)
        FROM users
        WHERE center_id = #{centerId}
    </select>

    <!-- 센터 삭제 -->
    <delete id="delete">
        DELETE FROM centers
        WHERE center_id = #{centerId}
    </delete>

    <!-- 엑셀 다운로드 : login_at 기준, SELECT * 원본 그대로 -->
    <select id="findLoginLogsRaw" resultType="map">
        SELECT *
        FROM login_logs
        WHERE login_at BETWEEN CONCAT(#{fromYmd}, ' 00:00:00')
                  AND     CONCAT(#{toYmd},   ' 23:59:59')
        ORDER BY login_at ASC
        LIMIT #{limit}
    </select>

    <!-- 슈퍼 단일성 유지를 위해 : 기존에 슈퍼였던 사람 전부 해제 (role 안 건드리고 is_super만 끔) -->
    <update id="demoteAllSuperToManager">
        UPDATE users
        SET is_super = 'N'
        WHERE is_super = 'Y'
    </update>

    <!-- 특정 사용자 권한 변경: role 세팅 + is_super='Y' && center_id=1 -->
    <update id="updateRoleByUserId">
        UPDATE users
        SET user_role = #{role},
            is_super  = CASE WHEN #{role} = 'SUPERADMIN' THEN 'Y' ELSE is_super END,
            center_id = CASE WHEN #{role} = 'SUPERADMIN' THEN 1 ELSE center_id END,
            manager_phone_access = CASE WHEN #{role} = 'SUPERADMIN' THEN 'Y' ELSE manager_phone_access END,
            user_approved = CASE WHEN #{role} = 'SUPERADMIN' THEN 'Y' ELSE user_approved END
        WHERE user_id = #{userId}
          AND user_approved = 'Y'
    </update>

    <!-- 위임 대상 요약 -->
    <select id="findUserBriefById" resultType="com.blue.auth.dto.MyInfoResponse">
        SELECT
            u.user_id      AS userId,
            u.user_name    AS userName,
            u.user_email   AS userEmail,
            u.user_role    AS userRole,
            c.center_name  AS centerName,
            u.user_phone  AS userPhone,
            u.is_super     AS super,
            CASE WHEN u.is_super = 'Y' THEN TRUE ELSE FALSE END AS isSuper,
            ''             AS userPassword
        FROM users u
                 LEFT JOIN centers c ON c.center_id = u.center_id
        WHERE u.user_id = #{userId}
          AND u.user_approved = 'Y'
        LIMIT 1
    </select>

    <select id="findUserBriefByEmail" resultType="com.blue.auth.dto.MyInfoResponse">
        SELECT
            u.user_id     AS userId,
            u.user_name   AS userName,
            u.user_email  AS userEmail,
            u.user_role   AS userRole,
            c.center_name AS centerName,
            u.user_phone  AS userPhone,
            '' AS userPassword,
            CASE WHEN u.is_super = 'Y' THEN TRUE ELSE FALSE END AS isSuper
        FROM users u
                 LEFT JOIN centers c ON c.center_id = u.center_id
        WHERE u.user_email = #{email}
          AND u.user_approved = 'Y'
        LIMIT 1
    </select>

</mapper>