<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blue.customer.all.mapper.CustomerAllMapper">

    <!-- 로그인 사용자 컨텍스트 -->
    <select id="findUserContextByEmail" resultType="com.blue.customer.all.dto.UserContextDto">
        SELECT
            u.user_id    AS userId,
            u.user_role  AS role,
            u.center_id  AS centerId,
            u.user_email AS email,
            u.manager_phone_access AS visible
        FROM users u
        WHERE u.user_email = #{email}
        LIMIT 1
    </select>

    <!-- ===================== 합본(UNION) + 필터 푸시다운 ===================== -->
    <!-- ⚠ 이 블록에서만 필터링; 바깥 SELECT에서는 재필터링 안 함 -->
    <sql id="ADMIN_UNION_FILTERED">
        /* customers */
        SELECT
        c.customer_id           AS id,
        'CUSTOMER'              AS origin,
        c.customer_created_at   AS createdAt,
        u.user_name             AS staff,
        c.customer_division     AS division,
        c.customer_category     AS category,
        c.customer_name         AS name,
        c.customer_phone        AS phone,
        c.customer_source       AS source,
        c.customer_content      AS content,
        c.customer_memo         AS memo,
        c.customer_status       AS status,
        c.customer_promise_time AS promiseAt,
        c.division_rank         AS division_rank,
        c.status_rank           AS status_rank
        FROM customers c
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE 1=1
        <!-- 날짜/카테고리/디비전 -->
        <if test="dateFrom != null and dateFrom != ''">
            AND c.customer_created_at &gt;= #{dateFrom}
        </if>
        <if test="dateTo != null and dateTo != ''">
            AND c.customer_created_at &lt; DATE_ADD(#{dateTo}, INTERVAL 1 DAY)
        </if>
        <if test="category != null and category != ''">
            AND c.customer_category = #{category}
        </if>
        <if test="division != null and division != ''">
            AND c.customer_division = #{division}
        </if>
        <if test="status != null and status != ''">
            AND c.customer_status = #{status}
        </if>
        <!-- 키워드(가시권한 Y/N별 전화검색 분기 포함) -->
        <if test="keyword != null and keyword != ''">
            AND (
            c.customer_name LIKE CONCAT('%', #{keyword}, '%')
            OR u.user_name   LIKE CONCAT('%', #{keyword}, '%')
            <choose>
                <when test="keywordDigits != null and keywordDigits != ''">
                    OR EXISTS (
                    SELECT 1 FROM phone_lookup pl
                    WHERE pl.customer_id = c.customer_id
                    AND (
                    pl.phone_digits LIKE CONCAT('%', #{keywordDigits}, '%')
                    OR pl.phone_mid = #{keywordDigits}
                    OR pl.phone_last4 = #{keywordDigits}
                    )
                    )
                </when>
                <otherwise>
                    OR c.customer_phone LIKE CONCAT('%', #{keyword}, '%')
                </otherwise>
            </choose>
            )
        </if>

        UNION ALL

        /* duplicates */
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u2.user_name            AS staff,
        '중복'                  AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c2.customer_phone       AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content     AS content,
        d.duplicate_memo        AS memo,
        '없음'                  AS status,
        NULL                    AS promiseAt,
        d.division_rank         AS division_rank,
        d.status_rank           AS status_rank
        FROM customers_duplicate d
        JOIN customers c2 ON c2.customer_id = d.customer_id
        LEFT JOIN users u2 ON u2.user_id = c2.user_id
        WHERE d.duplicate_display = 1
        <!-- 날짜/카테고리 -->
        <if test="dateFrom != null and dateFrom != ''">
            AND d.duplicate_created_at &gt;= #{dateFrom}
        </if>
        <if test="dateTo != null and dateTo != ''">
            AND d.duplicate_created_at &lt; DATE_ADD(#{dateTo}, INTERVAL 1 DAY)
        </if>
        <if test="category != null and category != ''">
            AND d.duplicate_category = #{category}
        </if>
        <!-- 키워드(가시권한 Y/N별 전화검색 분기) -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <when test='visible == "N"'>
                    AND (
                    d.duplicate_name LIKE CONCAT('%', #{keyword}, '%')
                    OR u2.user_name  LIKE CONCAT('%', #{keyword}, '%')
                    <if test="keywordDigits != null and keywordDigits != ''">
                        OR EXISTS (
                        SELECT 1
                        FROM phone_lookup pl
                        WHERE pl.customer_id = c2.customer_id
                        AND pl.phone_last4 = #{keywordDigits}
                        )
                    </if>
                    )
                </when>
                <otherwise>
                    AND (
                    d.duplicate_name LIKE CONCAT('%', #{keyword}, '%')
                    OR u2.user_name  LIKE CONCAT('%', #{keyword}, '%')
                    <choose>
                        <when test="keywordDigits != null and keywordDigits != ''">
                            OR EXISTS (
                            SELECT 1
                            FROM phone_lookup pl
                            WHERE pl.customer_id = c2.customer_id
                            AND (
                            pl.phone_digits LIKE CONCAT('%', #{keywordDigits}, '%')
                            OR pl.phone_mid = #{keywordDigits}
                            OR pl.phone_last4 = #{keywordDigits}
                            )
                            )
                        </when>
                        <otherwise>
                            OR c2.customer_phone LIKE CONCAT('%', #{keyword}, '%')
                        </otherwise>
                    </choose>
                    )
                </otherwise>
            </choose>
        </if>
    </sql>

    <!-- ===================== Admin 정렬 (최종 SELECT 전용) ===================== -->
    <sql id="ADMIN_ORDER">
        <choose>
            <!-- 상태 필터가 '재콜'이면 예약 오름차순 고정 -->
            <when test='status != null and status != "" and status == "재콜"'>
                ORDER BY
                (t.promiseAt IS NULL) ASC,  -- 예약 없는 거 뒤로
                t.promiseAt ASC,
                t.createdAt DESC,
                t.id DESC
            </when>
            <when test="sortDivision and sortStatus">
                ORDER BY
                t.division_rank ASC,
                t.status_rank   ASC,
                CASE WHEN t.status='재콜' THEN (t.promiseAt IS NULL) END ASC,
                CASE WHEN t.status='재콜' THEN t.promiseAt END ASC,
                t.createdAt DESC,
                t.id DESC
            </when>
            <when test="sortStatus">
                ORDER BY
                t.status_rank   ASC,
                CASE WHEN t.status='재콜' THEN (t.promiseAt IS NULL) END ASC,
                CASE WHEN t.status='재콜' THEN t.promiseAt END ASC,
                t.createdAt DESC,
                t.id DESC
            </when>
            <when test="sortDivision">
                ORDER BY
                t.division_rank ASC,
                t.createdAt DESC,
                t.id DESC
            </when>
            <otherwise>
                ORDER BY t.createdAt DESC, t.id DESC
            </otherwise>
        </choose>
    </sql>

    <!-- ===================== 커서(키셋) 조건: DESC ===================== -->
    <sql id="ADMIN_CURSOR_DESC">
        <choose>
            <!-- 분류 + 상태 동시 정렬 -->
            <when test="sortDivision and sortStatus">
                <if test="cursorId != null">
                    AND (
                    t.division_rank &gt; #{cursorDivisionRank}
                    OR (t.division_rank = #{cursorDivisionRank} AND t.status_rank &gt; #{cursorStatusRank})
                    OR (
                    t.division_rank = #{cursorDivisionRank}
                    AND t.status_rank = #{cursorStatusRank}
                    AND (
                    (t.status_rank = 20 AND
                    IFNULL(t.promiseAt, '9999-12-31 23:59:59')
                    &gt; IFNULL(#{cursorPromiseAt}, '9999-12-31 23:59:59')
                    )
                    OR (t.status_rank &lt;&gt; 20 AND
                    (t.createdAt &lt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &lt; #{cursorId}))
                    )
                    )
                    )
                    )
                </if>
            </when>

            <!-- 상태만 정렬 -->
            <when test="sortStatus">
                <if test="cursorId != null">
                    AND (
                    t.status_rank &gt; #{cursorStatusRank}
                    OR (
                    t.status_rank = #{cursorStatusRank}
                    AND (
                    (t.status_rank = 20 AND
                    IFNULL(t.promiseAt, '9999-12-31 23:59:59')
                    &gt; IFNULL(#{cursorPromiseAt}, '9999-12-31 23:59:59')
                    )
                    OR (t.status_rank &lt;&gt; 20 AND
                    (t.createdAt &lt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &lt; #{cursorId}))
                    )
                    )
                    )
                    )
                </if>
            </when>

            <!-- 분류만 정렬 -->
            <when test="sortDivision">
                <if test="cursorId != null">
                    AND (
                    t.division_rank &gt; #{cursorDivisionRank}
                    OR (
                    t.division_rank = #{cursorDivisionRank}
                    AND (t.createdAt &lt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &lt; #{cursorId}))
                    )
                    )
                </if>
            </when>

            <!-- 기본 최신순(createdAt DESC, id DESC) -->
            <otherwise>
                <if test="cursorId != null">
                    AND (t.createdAt &lt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &lt; #{cursorId}))
                </if>
            </otherwise>
        </choose>
    </sql>

    <!-- ===================== 커서(키셋) 조건: ASC ===================== -->
    <sql id="ADMIN_CURSOR_ASC">
        <choose>
            <!-- 분류 + 상태 동시 정렬 -->
            <when test="sortDivision and sortStatus">
                <if test="cursorId != null">
                    AND (
                    t.division_rank &lt; #{cursorDivisionRank}
                    OR (t.division_rank = #{cursorDivisionRank} AND t.status_rank &lt; #{cursorStatusRank})
                    OR (
                    t.division_rank = #{cursorDivisionRank}
                    AND t.status_rank = #{cursorStatusRank}
                    AND (
                    (t.status_rank = 20 AND
                    IFNULL(t.promiseAt, '0000-01-01 00:00:00')
                    &lt; IFNULL(#{cursorPromiseAt}, '0000-01-01 00:00:00')
                    )
                    OR (t.status_rank &lt;&gt; 20 AND
                    (t.createdAt &gt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &gt; #{cursorId}))
                    )
                    )
                    )
                    )
                </if>
            </when>

            <!-- 상태만 정렬 -->
            <when test="sortStatus">
                <if test="cursorId != null">
                    AND (
                    t.status_rank &lt; #{cursorStatusRank}
                    OR (
                    t.status_rank = #{cursorStatusRank}
                    AND (
                    (t.status_rank = 20 AND
                    IFNULL(t.promiseAt, '0000-01-01 00:00:00')
                    &lt; IFNULL(#{cursorPromiseAt}, '0000-01-01 00:00:00')
                    )
                    OR (t.status_rank &lt;&gt; 20 AND
                    (t.createdAt &gt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &gt; #{cursorId}))
                    )
                    )
                    )
                    )
                </if>
            </when>

            <!-- 분류만 정렬 -->
            <when test="sortDivision">
                <if test="cursorId != null">
                    AND (
                    t.division_rank &lt; #{cursorDivisionRank}
                    OR (
                    t.division_rank = #{cursorDivisionRank}
                    AND (t.createdAt &gt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &gt; #{cursorId}))
                    )
                    )
                </if>
            </when>

            <!-- 기본 오래순(createdAt ASC, id ASC) -->
            <otherwise>
                <if test="cursorId != null">
                    AND (t.createdAt &gt; #{cursorAt}
                    OR (t.createdAt = #{cursorAt} AND t.id &gt; #{cursorId}))
                </if>
            </otherwise>
        </choose>
    </sql>

    <!-- ===================== Admin 리스트 ===================== -->
    <!-- 1) 정방향 키셋 (DESC) -->
    <select id="findAllKeysetForAdmin" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status,
        DATE_FORMAT(t.promiseAt, '%c월 %e일 %H:%i') AS reservation
        FROM (
        <include refid="ADMIN_UNION_FILTERED"/>
        ) t
        WHERE 1=1
        <include refid="ADMIN_CURSOR_DESC"/>
        <include refid="ADMIN_ORDER"/>
        LIMIT #{limit}
    </select>

    <!-- 2) 역방향 키셋 (ASC) -->
    <select id="findAllKeysetForAdminAsc" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status,
        DATE_FORMAT(t.promiseAt, '%c월 %e일 %H:%i') AS reservation
        FROM (
        <include refid="ADMIN_UNION_FILTERED"/>
        ) t
        WHERE 1=1
        <include refid="ADMIN_CURSOR_ASC"/>
        <choose>
            <when test="sortDivision and sortStatus">
                ORDER BY
                t.division_rank ASC,
                t.status_rank   ASC,
                CASE WHEN t.status='재콜' THEN (t.promiseAt IS NULL) END ASC,
                CASE WHEN t.status='재콜' THEN t.promiseAt END ASC,
                t.createdAt ASC, t.id ASC
            </when>
            <when test="sortStatus">
                ORDER BY
                t.status_rank   ASC,
                CASE WHEN t.status='재콜' THEN (t.promiseAt IS NULL) END ASC,
                CASE WHEN t.status='재콜' THEN t.promiseAt END ASC,
                t.createdAt ASC, t.id ASC
            </when>
            <when test="sortDivision">
                ORDER BY
                t.division_rank ASC,
                t.createdAt ASC, t.id ASC
            </when>
            <otherwise>
                ORDER BY t.createdAt ASC, t.id ASC
            </otherwise>
        </choose>
        LIMIT #{limit}
    </select>

    <!-- 3) 마지막 페이지 전용 (ASC LIMIT N) -->
    <select id="findTailForAdmin" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status,
        DATE_FORMAT(t.promiseAt, '%c월 %e일 %H:%i') AS reservation
        FROM (
        <include refid="ADMIN_UNION_FILTERED"/>
        ) t
        WHERE 1=1
        ORDER BY t.createdAt ASC, t.id ASC
        LIMIT #{limit}
    </select>

    <!-- 4) 앵커 1건 (OFFSET 기반) -->
    <select id="findAnchorForAdmin" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status,
        DATE_FORMAT(t.promiseAt, '%c월 %e일 %H:%i') AS reservation
        FROM (
        <include refid="ADMIN_UNION_FILTERED"/>
        ) t
        WHERE 1=1
        <include refid="ADMIN_ORDER"/>
        LIMIT 1 OFFSET #{offset}
    </select>

    <!-- 카운트 (필터는 UNION 내부에서 모두 처리) -->
    <select id="countAllForAdmin" resultType="int">
        SELECT COUNT(*) FROM (
        <include refid="ADMIN_UNION_FILTERED"/>
        ) t
    </select>

    <!-- ===================== MANAGER / STAFF ===================== -->

    <sql id="CUSTOMER_ONLY_FILTERS">
        <if test="keyword != null &amp;&amp; keyword != ''">
            AND (
            c.customer_name LIKE CONCAT('%', #{keyword}, '%')
            OR u.user_name   LIKE CONCAT('%', #{keyword}, '%')
            <choose>
                <when test="keywordDigits != null &amp;&amp; keywordDigits != ''">
                    OR EXISTS (
                    SELECT 1
                    FROM phone_lookup pl
                    WHERE pl.customer_id = c.customer_id
                    AND (
                    pl.phone_digits LIKE CONCAT('%', #{keywordDigits}, '%')
                    OR pl.phone_mid    = #{keywordDigits}
                    OR pl.phone_last4  = #{keywordDigits}
                    )
                    )
                </when>
                <otherwise>
                    OR c.customer_phone LIKE CONCAT('%', #{keyword}, '%')
                </otherwise>
            </choose>
            )
        </if>
        <if test="dateFrom != null &amp;&amp; dateFrom != ''">
            AND c.customer_created_at &gt;= #{dateFrom}
        </if>
        <if test="dateTo != null &amp;&amp; dateTo != ''">
            AND c.customer_created_at &lt; DATE_ADD(#{dateTo}, INTERVAL 1 DAY)
        </if>
        <if test="category != null &amp;&amp; category != ''">
            AND c.customer_category = #{category}
        </if>
        <if test="division != null &amp;&amp; division != ''">
            AND c.customer_division = #{division}
        </if>
        <if test="status != null &amp;&amp; status != ''">
            AND c.customer_status = #{status}
        </if>
    </sql>

    <sql id="CUSTOMER_ONLY_ORDER_KEYSET">
        <choose>
            <!-- 상태 필터가 '재콜'이면 예약 오름차순 고정 -->
            <when test='status != null and status != "" and status == "재콜"'>
                ORDER BY
                (c.customer_promise_time IS NULL) ASC,
                c.customer_promise_time ASC,
                c.customer_created_at DESC,
                c.customer_id DESC
            </when>
            <when test="sortDivision and sortStatus">
                ORDER BY
                c.division_rank ASC,
                c.status_rank   ASC,
                CASE WHEN c.customer_status='재콜' THEN (c.customer_promise_time IS NULL) END ASC,
                CASE WHEN c.customer_status='재콜' THEN c.customer_promise_time END ASC,
                CASE WHEN c.customer_status&lt;&gt;'재콜' THEN c.customer_created_at END DESC,
                c.customer_id DESC
            </when>
            <when test="sortStatus">
                ORDER BY
                c.status_rank   ASC,
                CASE WHEN c.customer_status='재콜' THEN (c.customer_promise_time IS NULL) END ASC,
                CASE WHEN c.customer_status='재콜' THEN c.customer_promise_time END ASC,
                CASE WHEN c.customer_status&lt;&gt;'재콜' THEN c.customer_created_at END DESC,
                c.customer_id DESC
            </when>
            <when test="sortDivision">
                ORDER BY
                c.division_rank ASC,
                c.customer_created_at DESC,
                c.customer_id DESC
            </when>
            <otherwise>
                ORDER BY c.customer_created_at DESC, c.customer_id DESC
            </otherwise>
        </choose>
    </sql>

    <select id="findAllKeysetForManager" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        c.customer_id           AS id,
        'CUSTOMER'              AS origin,
        c.customer_created_at   AS createdAt,
        u.user_name             AS staff,
        c.customer_division     AS division,
        c.customer_category     AS category,
        c.customer_name         AS name,
        c.customer_phone        AS phone,
        c.customer_source       AS source,
        c.customer_content      AS content,
        c.customer_memo         AS memo,
        c.customer_status       AS status,
        DATE_FORMAT(c.customer_promise_time, '%c월 %e일 %H:%i') AS reservation
        FROM customers c
        JOIN users u ON u.user_id = c.user_id
        WHERE c.user_id IN (SELECT user_id FROM users WHERE center_id = #{centerId})
        <include refid="CUSTOMER_ONLY_FILTERS"/>
        <if test="cursorAt != null">
            AND (c.customer_created_at &lt; #{cursorAt}
            OR (c.customer_created_at = #{cursorAt} AND c.customer_id &lt; #{cursorId}))
        </if>
        <include refid="CUSTOMER_ONLY_ORDER_KEYSET"/>
        LIMIT #{limit}
    </select>

    <select id="findAllKeysetForStaff" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        c.customer_id           AS id,
        'CUSTOMER'              AS origin,
        c.customer_created_at   AS createdAt,
        u.user_name             AS staff,
        c.customer_division     AS division,
        c.customer_category     AS category,
        c.customer_name         AS name,
        c.customer_phone        AS phone,
        c.customer_source       AS source,
        c.customer_content      AS content,
        c.customer_memo         AS memo,
        c.customer_status       AS status,
        DATE_FORMAT(c.customer_promise_time, '%c월 %e일 %H:%i') AS reservation
        FROM customers c
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE c.user_id = #{userId}
        <include refid="CUSTOMER_ONLY_FILTERS"/>
        <if test="cursorAt != null">
            AND (c.customer_created_at &lt; #{cursorAt}
            OR (c.customer_created_at = #{cursorAt} AND c.customer_id &lt; #{cursorId}))
        </if>
        <include refid="CUSTOMER_ONLY_ORDER_KEYSET"/>
        LIMIT #{limit}
    </select>

    <select id="findAnchorForManager" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        c.customer_id           AS id,
        'CUSTOMER'              AS origin,
        c.customer_created_at   AS createdAt,
        u.user_name             AS staff,
        c.customer_division     AS division,
        c.customer_category     AS category,
        c.customer_name         AS name,
        c.customer_phone        AS phone,
        c.customer_source       AS source,
        c.customer_content      AS content,
        c.customer_memo         AS memo,
        c.customer_status       AS status,
        DATE_FORMAT(c.customer_promise_time, '%c월 %e일 %H:%i') AS reservation
        FROM customers c
        JOIN users u ON u.user_id = c.user_id
        WHERE c.user_id IN (SELECT user_id FROM users WHERE center_id = #{centerId})
        <include refid="CUSTOMER_ONLY_FILTERS"/>
        <include refid="CUSTOMER_ONLY_ORDER_KEYSET"/>
        LIMIT 1 OFFSET #{offset}
    </select>

    <select id="findAnchorForStaff" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        c.customer_id           AS id,
        'CUSTOMER'              AS origin,
        c.customer_created_at   AS createdAt,
        u.user_name             AS staff,
        c.customer_division     AS division,
        c.customer_category     AS category,
        c.customer_name         AS name,
        c.customer_phone        AS phone,
        c.customer_source       AS source,
        c.customer_content      AS content,
        c.customer_memo         AS memo,
        c.customer_status       AS status,
        DATE_FORMAT(c.customer_promise_time, '%c월 %e일 %H:%i') AS reservation
        FROM customers c
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE c.user_id = #{userId}
        <include refid="CUSTOMER_ONLY_FILTERS"/>
        <include refid="CUSTOMER_ONLY_ORDER_KEYSET"/>
        LIMIT 1 OFFSET #{offset}
    </select>

    <select id="countAllForManager" resultType="int">
        SELECT COUNT(*)
        FROM customers c
        JOIN users u ON u.user_id = c.user_id
        WHERE c.user_id IN (SELECT user_id FROM users WHERE center_id = #{centerId})
        <include refid="CUSTOMER_ONLY_FILTERS"/>
    </select>

    <select id="countAllForStaff" resultType="int">
        SELECT COUNT(*)
        FROM customers c
        WHERE c.user_id = #{userId}
        <include refid="CUSTOMER_ONLY_FILTERS"/>
    </select>

    <!-- ===================== 검사/권한/수정 ===================== -->
    <select id="existsCustomerById" resultType="int">
        SELECT COUNT(*) FROM customers WHERE customer_id = #{customerId}
    </select>

    <select id="customerOwnedByCenter" resultType="int">
        SELECT COUNT(*)
        FROM customers c
                 JOIN users u ON u.user_id = c.user_id
        WHERE c.customer_id = #{customerId}
          AND u.center_id = #{centerId}
    </select>

    <select id="customerOwnedByUser" resultType="int">
        SELECT COUNT(*)
        FROM customers
        WHERE customer_id = #{customerId}
          AND user_id = #{userId}
    </select>

    <update id="updateCustomerReservation">
        UPDATE customers
        SET customer_promise_time = #{when}
        WHERE customer_id = #{customerId}
    </update>

    <update id="updateCustomerStatus">
        UPDATE customers
        SET customer_status = #{status}
        WHERE customer_id = #{customerId}
    </update>

    <update id="hideDuplicates">
        UPDATE customers_duplicate
        SET duplicate_display = 0
        WHERE duplicate_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>