<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blue.customer.duplicate.mapper.CustomerDuplMapper">

    <!-- 로그인 사용자 컨텍스트 -->
    <select id="findUserContextByEmail" resultType="com.blue.customer.all.dto.UserContextDto">
        SELECT
            u.user_id    AS userId,
            u.user_role  AS role,
            u.center_id  AS centerId,
            u.user_email AS email,
            u.manager_phone_access AS visible
        FROM users u
        WHERE u.user_email = #{email}
        LIMIT 1
    </select>

    <!-- 공통 필터: 중복 전용 (t.* 기준) -->
    <sql id="DUPL_FILTERS">
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- SUPERADMIN 가시권한 N: 전화 앞3/뒤4 '정확일치'만, 이름/담당자 LIKE 허용 -->
                <when test='_parameter.containsKey("visible") and visible == "N"'>
                    AND (
                    t.name  LIKE CONCAT('%', #{keyword}, '%')
                    OR t.staff LIKE CONCAT('%', #{keyword}, '%')
                    OR RIGHT(REGEXP_REPLACE(t.phone, '[^0-9]', ''), 4) = REGEXP_REPLACE(#{keyword}, '[^0-9]', '')
                    OR SUBSTRING(REGEXP_REPLACE(t.phone, '[^0-9]', ''), 1, 3) = REGEXP_REPLACE(#{keyword}, '[^0-9]', '')
                    OR SUBSTRING(REGEXP_REPLACE(t.phone, '[^0-9]', ''), 1, 2) = REGEXP_REPLACE(#{keyword}, '[^0-9]', '')  <!-- 02 지역번호 대응 -->
                    )
                </when>
                <!-- 기본: 이름/담당자/전화 LIKE -->
                <otherwise>
                    AND (
                    t.name  LIKE CONCAT('%', #{keyword}, '%')
                    OR t.staff LIKE CONCAT('%', #{keyword}, '%')
                    OR t.phone LIKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
        <if test="dateFrom != null and dateFrom != ''">
            AND t.createdAt &gt;= #{dateFrom}
        </if>
        <if test="dateTo != null and dateTo != ''">
            AND t.createdAt &lt; DATE_ADD(#{dateTo}, INTERVAL 1 DAY)
        </if>
        <if test="category != null and category != ''">
            AND t.category = #{category}
        </if>
    </sql>

    <!-- ================= SUPERADMIN: 전체 ================= -->
    <select id="findAllForAdmin" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status, t.reservation
        FROM (
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u.user_name             AS staff,
        '중복'                   AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c.customer_phone        AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content     AS content,
        d.duplicate_memo        AS memo,
        '없음'                   AS status,
        NULL                    AS reservation
        FROM customers_duplicate d
        JOIN customers c ON c.customer_id = d.customer_id
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE d.duplicate_display = 0
        ) t
        WHERE 1=1
        <include refid="DUPL_FILTERS"/>
        ORDER BY t.createdAt DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countAllForAdmin" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u.user_name             AS staff,
        '중복'                   AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c.customer_phone        AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content     AS content,
        d.duplicate_memo        AS memo,
        '없음'                   AS status,
        CAST(NULL AS CHAR(20))  AS reservation
        FROM customers_duplicate d
        JOIN customers c ON c.customer_id = d.customer_id
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE d.duplicate_display = 0
        ) t
        WHERE 1=1
        <include refid="DUPL_FILTERS"/>
    </select>

    <!-- ================= MANAGER: 자기 센터 ================= -->
    <select id="findAllForManager" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status, t.reservation
        FROM (
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u.user_name             AS staff,
        '중복'                   AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c.customer_phone        AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content     AS content,
        d.duplicate_memo        AS memo,
        '없음'                   AS status,
        NULL                    AS reservation
        FROM customers_duplicate d
        JOIN customers c ON c.customer_id = d.customer_id
        JOIN users u ON u.user_id = c.user_id

        WHERE d.duplicate_display = 0
            AND u.center_id = #{centerId}
            AND c.customer_status != '없음'

        ) t
        WHERE 1=1
        <include refid="DUPL_FILTERS"/>
        ORDER BY t.createdAt DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countAllForManager" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u.user_name             AS staff,
        '중복'                   AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c.customer_phone        AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content     AS content,
        d.duplicate_memo        AS memo,
        '없음'                   AS status,
        CAST(NULL AS CHAR(20))  AS reservation
        FROM customers_duplicate d
        JOIN customers c ON c.customer_id = d.customer_id
        JOIN users u ON u.user_id = c.user_id

        WHERE d.duplicate_display = 0
            AND u.center_id = #{centerId}
            AND c.customer_status != '없음'

        ) t
        WHERE 1=1
        <include refid="DUPL_FILTERS"/>
    </select>

    <!-- ================= STAFF: 본인 담당 ================= -->
    <select id="findAllForStaff" resultType="com.blue.customer.all.dto.AllDbRowDto">
        SELECT
        t.id, t.origin, t.createdAt, t.staff, t.division, t.category,
        t.name, t.phone, t.source, t.content, t.memo, t.status, t.reservation
        FROM (
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u.user_name             AS staff,
        '중복'                   AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c.customer_phone        AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content     AS content,
        d.duplicate_memo        AS memo,
        '없음'                   AS status,
        NULL                    AS reservation
        FROM customers_duplicate d
        JOIN customers c ON c.customer_id = d.customer_id
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE d.duplicate_display = 0
        AND c.user_id = #{userId}
        ) t
        WHERE 1=1
        <include refid="DUPL_FILTERS"/>
        ORDER BY t.createdAt DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="countAllForStaff" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT
        d.duplicate_id          AS id,
        'DUPLICATE'             AS origin,
        d.duplicate_created_at  AS createdAt,
        u.user_name             AS staff,
        '중복'                   AS division,
        d.duplicate_category    AS category,
        d.duplicate_name        AS name,
        c.customer_phone        AS phone,
        d.duplicate_source      AS source,
        d.duplicate_content      AS content,
        d.duplicate_memo         AS memo,
        '없음'                   AS status,
        CAST(NULL AS CHAR(20))  AS reservation
        FROM customers_duplicate d
        JOIN customers c ON c.customer_id = d.customer_id
        LEFT JOIN users u ON u.user_id = c.user_id
        WHERE d.duplicate_display = 0
        AND c.user_id = #{userId}
        ) t
        WHERE 1=1
        <include refid="DUPL_FILTERS"/>
    </select>

</mapper>
